package com.local.dao.product;

import com.local.model.Product;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.atomic.AtomicInteger;

public class ProductDAOMemImpl implements ProductDAO {
    private ConcurrentHashMap<Integer, Product> products;
    private AtomicInteger autoGeneratedId;

    public ProductDAOMemImpl() {
        products = new ConcurrentHashMap<>();
        autoGeneratedId = new AtomicInteger(1);
    }

    @Override
    public void addProduct(Product product) {
        Product newProduct = new Product(autoGeneratedId.get(), product.getName(), product.getPrice(), product.getCount());
        products.put(autoGeneratedId.getAndIncrement(), newProduct);
    }

    @Override
    public Product getProductById(int id) {
        return products.get(id);
    }

    @Override
    public Product getProductByName(String name) {
        for(Product product : products.values()) {
            if(product.getName().equals(name)) {
                return product;
            }
        }
        return null;
    }

    @Override
    public List<Product> getAllProducts() {
        return new ArrayList<>(products.values());
    }
}
