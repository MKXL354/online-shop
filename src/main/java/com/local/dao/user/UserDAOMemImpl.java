package com.local.dao.user;

import com.local.model.User;
import com.local.model.UserType;

import java.math.BigDecimal;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.atomic.AtomicInteger;

public class UserDAOMemImpl implements UserDAO {
    private ConcurrentHashMap<Integer, User> users;
    private AtomicInteger autoGeneratedId;

    public UserDAOMemImpl() {
        users = new ConcurrentHashMap<>();
        autoGeneratedId = new AtomicInteger(1);
        users.put(0, new User(0, "admin", "nn9EysQOvC9Dm5LwpdhgBkrLj6eUwm0E+gxvTU8ZSaA=:4ZFmj0Gd+Ly8zb/okH5AM+kFpraRJrY4qIBT9PKP164=", UserType.ADMIN, new BigDecimal(0)));
    }

    @Override
    public User addUser(User user) {
        int id = autoGeneratedId.getAndIncrement();
        user.setId(id);
        users.put(id, user);
        return new User(user);
    }

    @Override
    public void updateUser(User user) {
        users.put(user.getId(), user);
    }

    @Override
    public User getUserById(int id) {
        User user = users.get(id);
        return new User(user);
    }

    @Override
    public User getUserByUsername(String username) {
        User user = users.searchValues(16, (u) -> u.getUsername().equals(username) ? u : null);
        if(user != null){
            return new User(user);
        }
        return null;
    }
}
