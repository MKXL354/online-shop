//package com.local.dao.user;
//
//import com.local.model.User;
//import com.local.model.UserType;
//
//import java.io.Serial;
//import java.io.Serializable;
//import java.math.BigDecimal;
//import java.util.concurrent.ConcurrentHashMap;
//import java.util.concurrent.atomic.AtomicInteger;
//
////TODO: maybe complete the locked access to resources in methods
//public class UserDAOMemImpl implements UserDAO, Serializable {
//    @Serial
//    private static final long serialVersionUID = 8509577608556015946L;
//
//    private ConcurrentHashMap<Integer, User> users;
//    private AtomicInteger autoGeneratedId;
//
//    public UserDAOMemImpl() {
//        users = new ConcurrentHashMap<>();
//        users.put(0, new User(0, "admin", "nn9EysQOvC9Dm5LwpdhgBkrLj6eUwm0E+gxvTU8ZSaA=:4ZFmj0Gd+Ly8zb/okH5AM+kFpraRJrY4qIBT9PKP164=", UserType.ADMIN, new BigDecimal(0)));
//        autoGeneratedId = new AtomicInteger(1);
//    }
//
////    TODO: insertion concurrency?
//    @Override
//    public User addUser(User user) {
//        int id = autoGeneratedId.getAndIncrement();
//        user.setId(id);
//        users.put(id, user);
//        return new User(user);
//    }
//
//    @Override
//    public void updateUser(User user) {
//        users.computeIfPresent(user.getId(), (k, v) -> {
//            v.setUsername(user.getUsername());
//            v.setPassword(user.getPassword());
//            v.setType(user.getType());
//            v.setBalance(user.getBalance());
//            return v;
//        });
//    }
//
//    @Override
//    public User getUserById(int id) {
//        User user = users.get(id);
//        return new User(user);
//    }
//
//    @Override
//    public User getUserByUsername(String username) {
//        User user = users.searchValues(16, (u) -> u.getUsername().equals(username) ? u : null);
//        if(user != null){
//            return new User(user);
//        }
//        return null;
//    }
//}
